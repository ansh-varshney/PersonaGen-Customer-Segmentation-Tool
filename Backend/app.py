import uvicorn
from fastapi import FastAPI, HTTPException
from pydantic import BaseModel
from typing import Any
import pandas as pd
from model.model import model
from ai import chain

app = FastAPI()

# Input data model for predictions
class UserInput(BaseModel):
    count_orders: int
    average_spend: float
    return_ratio: float

# Input data model for AI analysis
class CustomerInfo(BaseModel):
    cust_info: str

@app.get("/")
def home() -> dict:
    """
    Home endpoint to verify service health.
    """
    return {"message": "Welcome to the Customer Segmentation and Strategy Application"}

@app.post("/predict")
def predict_user_segment(data: UserInput) -> dict:
    """
    Predict the user segment based on input data.
    """
    try:
        # Prepare input data for the model
        input_data = pd.DataFrame([data.dict()])
        
        # Ensure the model handles the data appropriately
        segment_prediction = model.predict(input_data)
        if not segment_prediction:
            raise ValueError("No prediction received from the model.")
        
        # Extract and return the result
        segment = int(segment_prediction[0])
        return {"predicted_segment": segment}
    except ValueError as value_error:
        raise HTTPException(status_code=400, detail=str(value_error))
    except Exception as error:
        print(f"Error during prediction: {error}")
        raise HTTPException(status_code=500, detail="Prediction failed")

@app.post("/ai")
async def generate_strategy(cust_info: CustomerInfo) -> dict:
    """
    Generate a customer strategy using the AI chain function.
    """
    try:
        # Generate a strategy using the updated `chain` function
        strategy = chain(cust_info.cust_info)
        if not strategy:
            raise ValueError("No strategy generated by the AI chain.")
        
        return {"strategy": strategy}
    except ValueError as value_error:
        raise HTTPException(status_code=400, detail=str(value_error))
    except Exception as error:
        print(f"Error generating strategy: {error}")
        raise HTTPException(status_code=500, detail="AI processing failed")

if __name__ == "__main__":
    uvicorn.run(app, host="127.0.0.1", port=8000)
